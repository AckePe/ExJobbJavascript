{"id":"index.html","dependencies":[{"name":"./style.css","dynamic":true,"resolved":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\src\\style.css","parent":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\src\\index.html"},{"name":"./js-logo.png","dynamic":true,"resolved":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\src\\js-logo.png","parent":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\src\\index.html"},{"name":"_css_loader","parent":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\src\\index.html","resolved":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\AxelE\\Documents\\GitHub\\ExJobbJavascript\\ex-js\\package.json","includedInParent":true,"mtime":1713125532917}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>JavaScript App</title>\r\n    <link rel=\"stylesheet\" href=\"/da232d78aa810382f2dcdceae308ff8e.css\">\r\n</head>\r\n<body>\r\n<div id=\"root\" class=\"container\">\r\n    <header class=\"header\">\r\n        <h1>JavaScript</h1>\r\n    </header>\r\n    <div>\r\n        <img src=\"/4d3589effac01f2dd5200fda12c4411f.png\" alt=\"Logo\">\r\n    </div>\r\n    <div>\r\n        <button class=\"btn\" id=\"toggleButton\">Search</button>\r\n    </div>\r\n    <nav class=\"navbar\" id=\"searchContent\" style=\"display: none\">\r\n        <input type=\"text\" placeholder=\"Search...\" id=\"searchInput\">\r\n        <button class=\"navbar-btn hidden\" id=\"navbar-search\" onclick=\"search()\">Search</button>\r\n        <button class=\"navbar-btn hidden\" onclick=\"handleSearchButtonClick()\">Measure</button>\r\n    </nav>\r\n    <div id=\"spinner\" class=\"spinner\" style=\"display: none\"></div>\r\n    <ul class=\"samples\" id=\"searchResultsContainer\"></ul>\r\n    <div id=\"loader\" class=\"loader\" style=\"display: none\"></div>\r\n    <footer class=\"footer\">\r\n        <p>\r\n            <a href=\"https://creativecommons.org/licenses/by/4.0/\" style=\"color: #f0db4f;\">\r\n                Attribution 4.0 International (CC BY 4.0)\r\n            </a>\r\n        </p><p>\r\n            Dataset created by\r\n            <a href=\"https://www.kaggle.com/datasets/whenamancodes/online-retail-data-ii\" style=\"color: #f0db4f;\">\r\n                Aman Chauhan\r\n            </a>\r\n        </p>\r\n        <p></p>\r\n    </footer>\r\n</div>\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js\"></script>\r\n<script>function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar searchData = []; // Variable to store search data\nvar isMeasureClicked = false; // Flag to track if \"Measure\" button is clicked\n\nfunction setSearchData(data) {\n  searchData = data;\n}\nfunction setIsMeasureClicked(clicked) {\n  isMeasureClicked = clicked;\n}\nfunction handleSearchButtonClick() {\n  console.log(\"Measure button is clicked\");\n  setSearchData([]); // Clear previous search data\n  runSearches();\n}\nfunction setTotalLoadTime(totalLoadTime) {\n  console.log(\"Total Load Time:\", totalLoadTime);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var toggleButton = document.getElementById(\"toggleButton\");\n  toggleButton.addEventListener(\"click\", toggleContent);\n\n  // Add event listener to the search button\n  var searchButton = document.querySelector(\"#searchContent button\");\n  searchButton.addEventListener(\"click\", function () {\n    // Display search content if hidden\n    var searchContent = document.getElementById(\"searchContent\");\n    if (searchContent.style.display === \"none\") {\n      searchContent.style.display = \"flex\";\n      toggleButton.textContent = \"Home\"; // Change button text\n    }\n\n    // Run the search function\n    search();\n  });\n\n  // Add event listener to the measure button\n  var measureButton = document.querySelector(\"#searchContent button:nth-child(2)\");\n  measureButton.addEventListener(\"click\", handleSearchButtonClick);\n  fetch('http://localhost:3000/dataSet.json').then(function (response) {\n    console.log('Fetch response:', response);\n    return response.json(); // Parse response body as JSON\n  }).then(function (data) {\n    console.log('Parsed JSON data:', data); // Log parsed JSON data\n\n    // Slice the data to include only the first 100 items\n    window.data = data;\n  }).catch(function (error) {\n    console.error('Error fetching data:', error);\n  });\n});\nfunction toggleContent() {\n  var searchContent = document.getElementById(\"searchContent\");\n  var toggleButton = document.getElementById(\"toggleButton\");\n  if (searchContent.style.display === \"none\") {\n    searchContent.style.display = \"flex\";\n    toggleButton.textContent = \"Home\"; // Change button text\n  } else {\n    searchContent.style.display = \"none\"; // Corrected assignment\n    toggleButton.textContent = \"Search\"; // Change button text\n  }\n}\nfunction setSearchResult(result) {\n  var searchResultsContainer = document.getElementById(\"searchResultsContainer\");\n  searchResultsContainer.innerHTML = result;\n}\nfunction setLoading(loading) {\n  var loader = document.getElementById(\"loader\");\n  if (loader) {\n    if (loading) {\n      loader.style.display = \"block\";\n    } else {\n      loader.style.display = \"none\";\n    }\n  } else {\n    console.error(\"Loader element not found\");\n  }\n}\nfunction handleSearch(term) {\n  setLoading(true);\n  var startTime = performance.now(); // Record start time\n\n  var filteredData = window.data.filter(function (item) {\n    for (var key in item) {\n      if (item.hasOwnProperty(key) && typeof item[key] === \"string\" && item[key].toLowerCase().includes(term.toLowerCase())) {\n        return true;\n      }\n    }\n    return false;\n  });\n  var endTime = performance.now(); // Record end time\n  var measuredLoadTime = endTime - startTime;\n  setSearchResult(filteredData.slice(0, 100));\n  setLoading(false);\n  return Promise.resolve(filteredData); // Resolve with filtered data\n}\nfunction runSearches() {\n  return _runSearches.apply(this, arguments);\n}\nfunction _runSearches() {\n  _runSearches = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var totalLoadTime, searchData, i, searchTerm, startTime, endTime, measuredLoadTime;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          setIsMeasureClicked(true); // Set measure clicked flag\n          totalLoadTime = 0;\n          searchData = [];\n          i = 0;\n        case 4:\n          if (!(i < 1000)) {\n            _context.next = 16;\n            break;\n          }\n          searchTerm = generateRandomSearchTerm();\n          startTime = performance.now(); // Record start time\n          _context.next = 9;\n          return handleSearch(searchTerm);\n        case 9:\n          // Wait for each search to complete\n          endTime = performance.now(); // Record end time\n          measuredLoadTime = endTime - startTime;\n          totalLoadTime += measuredLoadTime;\n          searchData.push({\n            searchTerm: searchTerm,\n            loadTime: measuredLoadTime\n          });\n        case 13:\n          i++;\n          _context.next = 4;\n          break;\n        case 16:\n          setTotalLoadTime(totalLoadTime);\n          setSearchData(searchData);\n          handleSearchDataUpdate(searchData);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _runSearches.apply(this, arguments);\n}\nfunction generateRandomSearchTerm() {\n  // Use the current timestamp as the seed value\n  var seedValue = new Date().getTime();\n\n  // Initialize the random number generator with the seed value\n  var rng = new Math.seedrandom(seedValue);\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  var searchTerm = \"\";\n  for (var i = 0; i < 5; i++) {\n    var randomLetterIndex = Math.floor(rng() * alphabet.length); // Use the seeded RNG\n    var randomLetter = alphabet[randomLetterIndex];\n    searchTerm += randomLetter;\n  }\n  return searchTerm;\n}\nfunction handleSearchDataUpdate(searchData) {\n  if (isMeasureClicked && searchData.length > 0) {\n    var blob = new Blob([JSON.stringify(searchData, null, 2)], {\n      type: \"application/json\"\n    });\n    var url = URL.createObjectURL(blob);\n    var link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"search_results_js.json\";\n    document.body.appendChild(link);\n    link.click();\n    URL.revokeObjectURL(url);\n    document.body.removeChild(link);\n  }\n}\nfunction search() {\n  // Get search query from input field\n  var query = document.getElementById(\"searchInput\").value.toLowerCase().trim();\n\n  // Get reference to search results container\n  var searchResultsContainer = document.getElementById(\"searchResultsContainer\");\n  searchResultsContainer.innerHTML = \"\"; // Clear previous search results\n\n  setLoading(true); // Set loading to true when search starts\n\n  // Filter data based on search query\n  var filteredData = window.data.filter(function (item) {\n    // Check if any field matches the search query\n    for (var key in item) {\n      if (item.hasOwnProperty(key) && typeof item[key] === \"string\" && item[key].toLowerCase().includes(query)) {\n        return true;\n      }\n    }\n    return false;\n  });\n\n  // Render search results\n  filteredData.forEach(function (dataset) {\n    var card = document.createElement(\"div\");\n    card.className = \"card\";\n\n    // Construct card content\n    var headerHTML = \"<div class='card-header'><h3>Stock code: \" + dataset.stockcode + \"</h3></div>\";\n    var bodyHTML = \"<div class='card-body'>\" + \"<p><strong>Description: </strong>\" + dataset.description + \"</p>\" + \"<p><strong>Quantity: </strong>\" + dataset.quantity + \"</p>\" + \"<p><strong>Price: </strong>\" + dataset.price + \"</p>\" + \"<p><strong>Invoice date: </strong>\" + dataset.invoiceDate + \"</p>\" + \"<p><strong>Country: </strong>\" + dataset.country + \"</p>\" + \"</div>\";\n    card.innerHTML = headerHTML + bodyHTML;\n    searchResultsContainer.appendChild(card);\n  });\n  setLoading(false);\n}</script>\r\n</body>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"f358dcc63f90319e9f1fb56f3dad354d","cacheData":{"env":{}}}